// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg.proto

#ifndef PROTOBUF_INCLUDED_Msg_2eproto
#define PROTOBUF_INCLUDED_Msg_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Msg_2eproto 

namespace protobuf_Msg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Msg_2eproto
namespace demo {
class Msg;
class MsgDefaultTypeInternal;
extern MsgDefaultTypeInternal _Msg_default_instance_;
}  // namespace demo
namespace google {
namespace protobuf {
template<> ::demo::Msg* Arena::CreateMaybeMessage<::demo::Msg>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace demo {

enum Msg_MsgType {
  Msg_MsgType_CTL = 0,
  Msg_MsgType_DATA = 1
};
bool Msg_MsgType_IsValid(int value);
const Msg_MsgType Msg_MsgType_MsgType_MIN = Msg_MsgType_CTL;
const Msg_MsgType Msg_MsgType_MsgType_MAX = Msg_MsgType_DATA;
const int Msg_MsgType_MsgType_ARRAYSIZE = Msg_MsgType_MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Msg_MsgType_descriptor();
inline const ::std::string& Msg_MsgType_Name(Msg_MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Msg_MsgType_descriptor(), value);
}
inline bool Msg_MsgType_Parse(
    const ::std::string& name, Msg_MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Msg_MsgType>(
    Msg_MsgType_descriptor(), name, value);
}
// ===================================================================

class Msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:demo.Msg) */ {
 public:
  Msg();
  virtual ~Msg();

  Msg(const Msg& from);

  inline Msg& operator=(const Msg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Msg(Msg&& from) noexcept
    : Msg() {
    *this = ::std::move(from);
  }

  inline Msg& operator=(Msg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Msg* internal_default_instance() {
    return reinterpret_cast<const Msg*>(
               &_Msg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Msg* other);
  friend void swap(Msg& a, Msg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Msg* New() const final {
    return CreateMaybeMessage<Msg>(NULL);
  }

  Msg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Msg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Msg& from);
  void MergeFrom(const Msg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Msg_MsgType MsgType;
  static const MsgType CTL =
    Msg_MsgType_CTL;
  static const MsgType DATA =
    Msg_MsgType_DATA;
  static inline bool MsgType_IsValid(int value) {
    return Msg_MsgType_IsValid(value);
  }
  static const MsgType MsgType_MIN =
    Msg_MsgType_MsgType_MIN;
  static const MsgType MsgType_MAX =
    Msg_MsgType_MsgType_MAX;
  static const int MsgType_ARRAYSIZE =
    Msg_MsgType_MsgType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgType_descriptor() {
    return Msg_MsgType_descriptor();
  }
  static inline const ::std::string& MsgType_Name(MsgType value) {
    return Msg_MsgType_Name(value);
  }
  static inline bool MsgType_Parse(const ::std::string& name,
      MsgType* value) {
    return Msg_MsgType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string info = 3;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::std::string& info() const;
  void set_info(const ::std::string& value);
  #if LANG_CXX11
  void set_info(::std::string&& value);
  #endif
  void set_info(const char* value);
  void set_info(const char* value, size_t size);
  ::std::string* mutable_info();
  ::std::string* release_info();
  void set_allocated_info(::std::string* info);

  // required .demo.Msg.MsgType msg_type = 2;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  ::demo::Msg_MsgType msg_type() const;
  void set_msg_type(::demo::Msg_MsgType value);

  // @@protoc_insertion_point(class_scope:demo.Msg)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_info();
  void clear_has_info();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr info_;
  int msg_type_;
  friend struct ::protobuf_Msg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Msg

// required string name = 1;
inline bool Msg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Msg::name() const {
  // @@protoc_insertion_point(field_get:demo.Msg.name)
  return name_.GetNoArena();
}
inline void Msg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:demo.Msg.name)
}
#if LANG_CXX11
inline void Msg::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:demo.Msg.name)
}
#endif
inline void Msg::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:demo.Msg.name)
}
inline void Msg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:demo.Msg.name)
}
inline ::std::string* Msg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:demo.Msg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Msg::release_name() {
  // @@protoc_insertion_point(field_release:demo.Msg.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Msg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:demo.Msg.name)
}

// required .demo.Msg.MsgType msg_type = 2;
inline bool Msg::has_msg_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg::set_has_msg_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::demo::Msg_MsgType Msg::msg_type() const {
  // @@protoc_insertion_point(field_get:demo.Msg.msg_type)
  return static_cast< ::demo::Msg_MsgType >(msg_type_);
}
inline void Msg::set_msg_type(::demo::Msg_MsgType value) {
  assert(::demo::Msg_MsgType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:demo.Msg.msg_type)
}

// required string info = 3;
inline bool Msg::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_info();
}
inline const ::std::string& Msg::info() const {
  // @@protoc_insertion_point(field_get:demo.Msg.info)
  return info_.GetNoArena();
}
inline void Msg::set_info(const ::std::string& value) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:demo.Msg.info)
}
#if LANG_CXX11
inline void Msg::set_info(::std::string&& value) {
  set_has_info();
  info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:demo.Msg.info)
}
#endif
inline void Msg::set_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:demo.Msg.info)
}
inline void Msg::set_info(const char* value, size_t size) {
  set_has_info();
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:demo.Msg.info)
}
inline ::std::string* Msg::mutable_info() {
  set_has_info();
  // @@protoc_insertion_point(field_mutable:demo.Msg.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Msg::release_info() {
  // @@protoc_insertion_point(field_release:demo.Msg.info)
  if (!has_info()) {
    return NULL;
  }
  clear_has_info();
  return info_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Msg::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    set_has_info();
  } else {
    clear_has_info();
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:demo.Msg.info)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace demo

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::demo::Msg_MsgType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::demo::Msg_MsgType>() {
  return ::demo::Msg_MsgType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Msg_2eproto
